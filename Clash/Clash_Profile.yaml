proxy-providers:
  provider1:
    url: ""
    type: http
    interval: 86400
    health-check: {enable: true,url: "http://www.google.com/generate_204",interval: 300}
    override:
      additional-prefix: "[ACA] "

  provider2:
    url: ""
    type: http
    interval: 86400
    health-check: {enable: true,url: "http://www.google.com/generate_204",interval: 300}
    override:
      additional-prefix: "[Aladdin] "

proxies: 
  - name: "直连"
    type: direct
    udp: true

mixed-port: 7890
ipv6: true
allow-lan: true
unified-delay: false
tcp-concurrent: true
external-controller: 127.0.0.1:9090
external-ui: ui
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

find-process-mode: strict
global-client-fingerprint: chrome

profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  skip-domain:
    - "Mijia Cloud"
    - "+.push.apple.com"

tun:
  enable: true
  stack: mixed
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

dns:
  enable: true
  ipv6: true
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-filter:
    - "*"
    - "+.lan"
    - "+.local"
    - "+.market.xiaomi.com"
  nameserver:
    - https://120.53.53.53/dns-query
    - https://223.5.5.5/dns-query
  proxy-server-nameserver:
    - https://120.53.53.53/dns-query
    - https://223.5.5.5/dns-query
  nameserver-policy:
    "rule-set:chinamax_domain,private_domain":
      - https://120.53.53.53/dns-query
      - https://223.5.5.5/dns-query

proxy-groups:

  - name: 策略选择
    type: select
    proxies: [自动选择,香港节点,台湾节点,新加坡节点,日本节点,韩国节点,美国节点,其他节点,全部节点]

  - name: Google
    type: select
    proxies: [策略选择,香港节点,台湾节点,新加坡节点,日本节点,韩国节点,美国节点,其他节点,全部节点,自动选择]

  - name: Telegram
    type: select
    proxies: [策略选择,香港节点,台湾节点,新加坡节点,日本节点,韩国节点,美国节点,其他节点,全部节点,自动选择]

  - name: Twitter
    type: select
    proxies: [策略选择,香港节点,台湾节点,新加坡节点,日本节点,韩国节点,美国节点,其他节点,全部节点,自动选择]

  - name: 巴哈姆特
    type: select
    proxies: [策略选择,香港节点,台湾节点,新加坡节点,日本节点,韩国节点,美国节点,其他节点,全部节点,自动选择]

  - name: YouTube
    type: select
    proxies: [策略选择,香港节点,台湾节点,新加坡节点,日本节点,韩国节点,美国节点,其他节点,全部节点,自动选择]

  - name: NETFLIX
    type: select
    proxies: [策略选择,香港节点,台湾节点,新加坡节点,日本节点,韩国节点,美国节点,其他节点,全部节点,自动选择]

  - name: Spotify
    type: select
    proxies:  [策略选择,香港节点,台湾节点,新加坡节点,日本节点,韩国节点,美国节点,其他节点,全部节点,自动选择]

  - name: Github
    type: select
    proxies:  [策略选择,香港节点,台湾节点,新加坡节点,日本节点,韩国节点,美国节点,其他节点,全部节点,自动选择]

  #下面是地区分组
  - name: 香港节点
    type: url-test
    interval: 120
    lazy: true
    tolerance: 100
    include-all: true
    filter: "(?i)(香港|HK|Hong)"

  - name: 台湾节点
    type: url-test    
    interval: 120
    lazy: true
    tolerance: 100
    include-all: true
    filter: "(?i)(台湾|TW|Tai)"

  - name: 新加坡节点
    type: url-test
    interval: 120
    lazy: true
    tolerance: 100
    include-all: true
    filter: "(?i)(新加坡|坡|狮城|SG|Singapore)"

  - name: 日本节点
    type: url-test
    interval: 120
    lazy: true
    tolerance: 100
    include-all: true
    filter: "(?i)(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan)"

  - name: 韩国节点
    type: url-test
    interval: 120
    lazy: true
    tolerance: 100
    include-all: true
    filter: "(?i)(韩国|韓國|首尔|KR|Korea|KOR)"

  - name: 美国节点
    type: url-test
    interval: 120
    lazy: true
    tolerance: 100
    include-all: true
    filter: "(?i)(美国|US|United States)"

  - name: 英国节点
    type: url-test
    interval: 120
    lazy: true
    tolerance: 100
    include-all: true
    filter: "(?i)(英国|UK|(?i)Kingdom|English)"

  - name: 其他节点
    type: select
    include-all: true
    filter: "^((?!(香港|HK|Hong|台湾|TW|Tai|日本|川日|泉日|埼玉|沪日|深日|JP|Japan|韩国|韓國|首尔|KR|Korea|KOR|新加坡|坡|狮城|SG|Singapore|美国|US|United States|英国|UK|(?i)Kingdom|English|Emby|emby|奈飞|NF|流量|天|到期|Expire|官网|总计)).)*$"

  - name: 全部节点
    type: select
    include-all: true
    filter: "^((?!(流量|天|到期|Expire|官网|总计)).)*$"
    
  - name: 自动选择
    type: url-test
    include-all: true
    tolerance: 10
    filter: "^((?!(流量|天|到期|Expire|官网|总计|奈飞|NF|Emby|emby)).)*$"
    
rules:
  - RULE-SET,advertising_classical,REJECT
  - RULE-SET,private_classical,REJECT
  - RULE-SET,bahamut_classical,巴哈姆特
  - RULE-SET,github_classical,Github
  - RULE-SET,google_classical,Google
  - RULE-SET,netflix_classical,NETFLIX
  - RULE-SET,spotify_classical,Spotify
  - RULE-SET,twitter_classical,Twitter
  - RULE-SET,telegram_classical,Telegram
  - RULE-SET,youtube_classical,YouTube
  - RULE-SET,chinamax_classical,DIRECT

  - RULE-SET,advertising_domain,REJECT
  - RULE-SET,private_domain,REJECT
  - RULE-SET,chinamax_domain,DIRECT
  
  - RULE-SET,netflix_ip,NETFLIX
  - RULE-SET,chinamax_ip,DIRECT
  - GEOIP,CN,DIRECT 
  - MATCH,策略选择
  
rule-anchor:
  classical: &classical {type: http, interval: 86400, behavior: classical, format: yaml}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: yaml}
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: yaml}
rule-providers:
  private_classical:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Privacy/Privacy.yaml"
  advertising_classical:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Advertising/Advertising.yaml"
  chinamax_classical:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax.yaml"
  github_classical:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GitHub/GitHub.yaml"
  twitter_classical:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Twitter/Twitter.yaml"
  youtube_classical:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.yaml"
  google_classical:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google.yaml"
  telegram_classical:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.yaml"
  netflix_classical:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.yaml"
  bahamut_classical:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Bahamut/Bahamut.yaml"
  spotify_classical:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Spotify/Spotify.yaml"
  pixiv_classical:
    <<: *classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Pixiv/Pixiv.yaml"
        
  private_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Privacy/Privacy_Domain.yaml"
  advertising_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Advertising/Advertising_Domain.yaml"
  chinamax_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax_Domain.yaml"

  chinamax_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax_IP.yaml"
  netflix_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix_IP.yaml"
